@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@page
@* @model RP_DotNetCore_DevApp.Models.DataGridModel *@


@{
    List<PivotTableModel> pivotData = new List<PivotTableModel>();
  pivotData.Add(new PivotTableModel { Sold = 31, Amount = 52824, Country = "France", Products = "Mountain Bikes", Year = "FY 2015", Quarter = "Q1" });
  pivotData.Add(new PivotTableModel { Sold = 51, Amount = 86904, Country = "France", Products = "Mountain Bikes", Year = "FY 2015", Quarter = "Q2" });
  pivotData.Add(new PivotTableModel { Sold = 90, Amount = 153360, Country = "France", Products = "Mountain Bikes", Year = "FY 2015", Quarter = "Q3" });
  pivotData.Add(new PivotTableModel { Sold = 25, Amount = 42600, Country = "France", Products = "Mountain Bikes", Year = "FY 2015", Quarter = "Q4" });
  pivotData.Add(new PivotTableModel { Sold = 27, Amount = 46008, Country = "France", Products = "Mountain Bikes", Year = "FY 2016", Quarter = "Q1" });
  pivotData.Add(new PivotTableModel { Sold = 49, Amount = 83496, Country = "France", Products = "Mountain Bikes", Year = "FY 2016", Quarter = "Q2" });
  pivotData.Add(new PivotTableModel { Sold = 95, Amount = 161880, Country = "France", Products = "Mountain Bikes", Year = "FY 2016", Quarter = "Q3" });
  pivotData.Add(new PivotTableModel { Sold = 67, Amount = 114168, Country = "France", Products = "Mountain Bikes", Year = "FY 2016", Quarter = "Q4" });
  pivotData.Add(new PivotTableModel { Sold = 75, Amount = 127800, Country = "France", Products = "Mountain Bikes", Year = "FY 2017", Quarter = "Q1" });
  pivotData.Add(new PivotTableModel { Sold = 67, Amount = 114168, Country = "France", Products = "Mountain Bikes", Year = "FY 2017", Quarter = "Q2" });
  pivotData.Add(new PivotTableModel { Sold = 69, Amount = 117576, Country = "France", Products = "Mountain Bikes", Year = "FY 2017", Quarter = "Q3" });
  pivotData.Add(new PivotTableModel { Sold = 90, Amount = 153360, Country = "France", Products = "Mountain Bikes", Year = "FY 2017", Quarter = "Q4" });
  pivotData.Add(new PivotTableModel { Sold = 16, Amount = 27264, Country = "France", Products = "Mountain Bikes", Year = "FY 2018", Quarter = "Q1" });
  pivotData.Add(new PivotTableModel { Sold = 83, Amount = 124422, Country = "France", Products = "Road Bikes", Year = "FY 2015", Quarter = "Q1" });
  pivotData.Add(new PivotTableModel { Sold = 57, Amount = 85448, Country = "France", Products = "Road Bikes", Year = "FY 2015", Quarter = "Q2" });
  pivotData.Add(new PivotTableModel { Sold = 20, Amount = 29985, Country = "France", Products = "Road Bikes", Year = "FY 2015", Quarter = "Q3" });
  pivotData.Add(new PivotTableModel { Sold = 67, Amount = 70008, Country = "France", Products = "Road Bikes", Year = "FY 2016", Quarter = "Q1" });
  pivotData.Add(new PivotTableModel { Sold = 89, Amount = 60496, Country = "France", Products = "Road Bikes", Year = "FY 2016", Quarter = "Q2" });
  pivotData.Add(new PivotTableModel { Sold = 75, Amount = 801880, Country = "France", Products = "Road Bikes", Year = "FY 2016", Quarter = "Q3" });
  pivotData.Add(new PivotTableModel { Sold = 57, Amount = 204168, Country = "France", Products = "Road Bikes", Year = "FY 2016", Quarter = "Q4" });
  pivotData.Add(new PivotTableModel { Sold = 75, Amount = 737800, Country = "France", Products = "Road Bikes", Year = "FY 2017", Quarter = "Q1" });
  pivotData.Add(new PivotTableModel { Sold = 87, Amount = 884168, Country = "France", Products = "Road Bikes", Year = "FY 2017", Quarter = "Q2" });
  pivotData.Add(new PivotTableModel { Sold = 39, Amount = 729576, Country = "France", Products = "Road Bikes", Year = "FY 2017", Quarter = "Q3" });
  pivotData.Add(new PivotTableModel { Sold = 90, Amount = 38860, Country = "France", Products = "Road Bikes", Year = "FY 2017", Quarter = "Q4" });
  pivotData.Add(new PivotTableModel { Sold = 93, Amount = 139412, Country = "France", Products = "Road Bikes", Year = "FY 2015", Quarter = "Q4" });
  pivotData.Add(new PivotTableModel { Sold = 51, Amount = 92824, Country = "Germany", Products = "Mountain Bikes", Year = "FY 2015", Quarter = "Q1" });
  pivotData.Add(new PivotTableModel { Sold = 61, Amount = 76904, Country = "Germany", Products = "Mountain Bikes", Year = "FY 2015", Quarter = "Q2" });
  pivotData.Add(new PivotTableModel { Sold = 70, Amount = 43360, Country = "Germany", Products = "Mountain Bikes", Year = "FY 2015", Quarter = "Q3" });
  pivotData.Add(new PivotTableModel { Sold = 85, Amount = 62600, Country = "Germany", Products = "Mountain Bikes", Year = "FY 2015", Quarter = "Q4" });
  pivotData.Add(new PivotTableModel { Sold = 97, Amount = 86008, Country = "Germany", Products = "Mountain Bikes", Year = "FY 2016", Quarter = "Q1" });
  pivotData.Add(new PivotTableModel { Sold = 69, Amount = 93496, Country = "Germany", Products = "Mountain Bikes", Year = "FY 2016", Quarter = "Q2" });
  pivotData.Add(new PivotTableModel { Sold = 45, Amount = 301880, Country = "Germany", Products = "Mountain Bikes", Year = "FY 2016", Quarter = "Q3" });
  pivotData.Add(new PivotTableModel { Sold = 77, Amount = 404168, Country = "Germany", Products = "Mountain Bikes", Year = "FY 2016", Quarter = "Q4" });
  pivotData.Add(new PivotTableModel { Sold = 15, Amount = 137800, Country = "Germany", Products = "Mountain Bikes", Year = "FY 2017", Quarter = "Q1" });
  pivotData.Add(new PivotTableModel { Sold = 37, Amount = 184168, Country = "Germany", Products = "Mountain Bikes", Year = "FY 2017", Quarter = "Q2" });
  pivotData.Add(new PivotTableModel { Sold = 49, Amount = 89576, Country = "Germany", Products = "Mountain Bikes", Year = "FY 2017", Quarter = "Q3" });
  pivotData.Add(new PivotTableModel { Sold = 40, Amount = 33360, Country = "Germany", Products = "Mountain Bikes", Year = "FY 2017", Quarter = "Q4" });
  pivotData.Add(new PivotTableModel { Sold = 96, Amount = 77264, Country = "Germany", Products = "Mountain Bikes", Year = "FY 2018", Quarter = "Q1" });
  pivotData.Add(new PivotTableModel { Sold = 23, Amount = 24422, Country = "Germany", Products = "Road Bikes", Year = "FY 2015", Quarter = "Q1" });
  pivotData.Add(new PivotTableModel { Sold = 67, Amount = 75448, Country = "Germany", Products = "Road Bikes", Year = "FY 2015", Quarter = "Q2" });
  pivotData.Add(new PivotTableModel { Sold = 70, Amount = 52345, Country = "Germany", Products = "Road Bikes", Year = "FY 2015", Quarter = "Q3" });
  pivotData.Add(new PivotTableModel { Sold = 13, Amount = 135612, Country = "Germany", Products = "Road Bikes", Year = "FY 2015", Quarter = "Q4" });
  pivotData.Add(new PivotTableModel { Sold = 57, Amount = 90008, Country = "Germany", Products = "Road Bikes", Year = "FY 2016", Quarter = "Q1" });
  pivotData.Add(new PivotTableModel { Sold = 29, Amount = 90496, Country = "Germany", Products = "Road Bikes", Year = "FY 2016", Quarter = "Q2" });
  pivotData.Add(new PivotTableModel { Sold = 45, Amount = 301880, Country = "Germany", Products = "Road Bikes", Year = "FY 2016", Quarter = "Q3" });
  pivotData.Add(new PivotTableModel { Sold = 77, Amount = 404168, Country = "Germany", Products = "Road Bikes", Year = "FY 2016", Quarter = "Q4" });
  pivotData.Add(new PivotTableModel { Sold = 15, Amount = 137800, Country = "Germany", Products = "Road Bikes", Year = "FY 2017", Quarter = "Q1" });
  pivotData.Add(new PivotTableModel { Sold = 37, Amount = 184168, Country = "Germany", Products = "Road Bikes", Year = "FY 2017", Quarter = "Q2" });
  pivotData.Add(new PivotTableModel { Sold = 99, Amount = 829576, Country = "Germany", Products = "Road Bikes", Year = "FY 2017", Quarter = "Q3" });
  pivotData.Add(new PivotTableModel { Sold = 80, Amount = 38360, Country = "Germany", Products = "Road Bikes", Year = "FY 2017", Quarter = "Q4" });
  pivotData.Add(new PivotTableModel { Sold = 91, Amount = 67824, Country = "United States", Products = "Mountain Bikes", Year = "FY 2015", Quarter = "Q1" });
  pivotData.Add(new PivotTableModel { Sold = 81, Amount = 99904, Country = "United States", Products = "Mountain Bikes", Year = "FY 2015", Quarter = "Q2" });
  pivotData.Add(new PivotTableModel { Sold = 70, Amount = 49360, Country = "United States", Products = "Mountain Bikes", Year = "FY 2015", Quarter = "Q3" });
  pivotData.Add(new PivotTableModel { Sold = 65, Amount = 69600, Country = "United States", Products = "Mountain Bikes", Year = "FY 2015", Quarter = "Q4" });
  pivotData.Add(new PivotTableModel { Sold = 57, Amount = 90008, Country = "United States", Products = "Mountain Bikes", Year = "FY 2016", Quarter = "Q1" });
  pivotData.Add(new PivotTableModel { Sold = 29, Amount = 90496, Country = "United States", Products = "Mountain Bikes", Year = "FY 2016", Quarter = "Q2" });
  pivotData.Add(new PivotTableModel { Sold = 85, Amount = 391880, Country = "United States", Products = "Mountain Bikes", Year = "FY 2016", Quarter = "Q3" });
  pivotData.Add(new PivotTableModel { Sold = 97, Amount = 904168, Country = "United States", Products = "Mountain Bikes", Year = "FY 2016", Quarter = "Q4" });
  pivotData.Add(new PivotTableModel { Sold = 85, Amount = 237800, Country = "United States", Products = "Mountain Bikes", Year = "FY 2017", Quarter = "Q1" });
  pivotData.Add(new PivotTableModel { Sold = 77, Amount = 384168, Country = "United States", Products = "Mountain Bikes", Year = "FY 2017", Quarter = "Q2" });
  pivotData.Add(new PivotTableModel { Sold = 99, Amount = 829576, Country = "United States", Products = "Mountain Bikes", Year = "FY 2017", Quarter = "Q3" });
  pivotData.Add(new PivotTableModel { Sold = 80, Amount = 38360, Country = "United States", Products = "Mountain Bikes", Year = "FY 2017", Quarter = "Q4" });
  pivotData.Add(new PivotTableModel { Sold = 76, Amount = 97264, Country = "United States", Products = "Mountain Bikes", Year = "FY 2018", Quarter = "Q1" });
  pivotData.Add(new PivotTableModel { Sold = 53, Amount = 94422, Country = "United States", Products = "Road Bikes", Year = "FY 2015", Quarter = "Q1" });
  pivotData.Add(new PivotTableModel { Sold = 90, Amount = 45448, Country = "United States", Products = "Road Bikes", Year = "FY 2015", Quarter = "Q2" });
  pivotData.Add(new PivotTableModel { Sold = 29, Amount = 92345, Country = "United States", Products = "Road Bikes", Year = "FY 2015", Quarter = "Q3" });
  pivotData.Add(new PivotTableModel { Sold = 67, Amount = 235612, Country = "United States", Products = "Road Bikes", Year = "FY 2015", Quarter = "Q4" });
  pivotData.Add(new PivotTableModel { Sold = 97, Amount = 90008, Country = "United States", Products = "Road Bikes", Year = "FY 2016", Quarter = "Q1" });
  pivotData.Add(new PivotTableModel { Sold = 79, Amount = 90496, Country = "United States", Products = "Road Bikes", Year = "FY 2016", Quarter = "Q2" });
  pivotData.Add(new PivotTableModel { Sold = 95, Amount = 501880, Country = "United States", Products = "Road Bikes", Year = "FY 2016", Quarter = "Q3" });
  pivotData.Add(new PivotTableModel { Sold = 97, Amount = 104168, Country = "United States", Products = "Road Bikes", Year = "FY 2016", Quarter = "Q4" });
  pivotData.Add(new PivotTableModel { Sold = 95, Amount = 837800, Country = "United States", Products = "Road Bikes", Year = "FY 2017", Quarter = "Q1" });
  pivotData.Add(new PivotTableModel { Sold = 87, Amount = 684168, Country = "United States", Products = "Road Bikes", Year = "FY 2017", Quarter = "Q2" });
  pivotData.Add(new PivotTableModel { Sold = 109, Amount = 29576, Country = "United States", Products = "Road Bikes", Year = "FY 2017", Quarter = "Q3" });
}



@using System.Data;

@model Dictionary<int, List<RP_DotNetCore_DevApp.Models.DataGridsModel>>
@{
    ViewBag.Title = "Data Grid";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var datagrids = ViewBag.DataGrids;
}


<div id="container" class="m-1">
    <h2>Data Grid Features:</h2>
    @if (datagrids != null)
    {
        foreach (var gridModel in datagrids)
        {


            <div class="container m-1">
                <div class="row">

                    @foreach (var grid in gridModel.Value)
                    {
                        if (grid.pivotTable)
                        {
                            var url = $"https://localhost:7051/api/Pivot/{grid.TableName}";
                            <div id="container" class="m-1">
                                <h5>@(grid.Title)</h5>
                                <ejs-pivotview id="@grid.id" height="500" showGroupingBar="true">
                        
                                    <e-datasourcesettings Url=@url enableSorting="true" allowLabelFilter="true" allowValueFilter="true">
                                        <e-rows>
                                            @foreach (var item in grid.rows)
                                            {
                                                <e-field name="@item["name"]"></e-field>
                                            }
                                        </e-rows>
                                        <e-columns>
                                            @foreach (var item in grid.columns)
                                            {
                                                <e-field name="@item["name"]" caption="@item["caption"]"></e-field>
                                            }
                                        </e-columns>
                                        <e-values>
                                            @foreach (var item in grid.values)
                                            {
                                                <e-field name="@item["name"]" caption="@item["caption"]"></e-field>
                                            }
                                        </e-values>
                                    </e-datasourcesettings>
                                </ejs-pivotview>

                            </div>

                        }
                        else
                        {
                            <div class="col-@(12 / (gridModel.Value.Count))">
                                <h5>@(grid.Title)</h5>
                                <ejs-grid id="@grid.id" dataSource="@grid.DataSource"
                                          allowPaging="true"
                                          allowSorting="true"
                                          allowResizing="true"
                                          allowFiltering="true"
                                          allowGrouping="true"
                                          toolbar="@grid.toolBarItems"
                                          beforeBatchSave="actionComplete">
                                    <e-grid-columns>
                                        @foreach (DataColumn column in grid.dataColumns)
                                        {
                                            bool primaryKey = grid.primaryKeyColumn.Contains(column.ColumnName);
                                            <e-grid-column field="@column.ColumnName" headerText="@column.ColumnName" all isPrimaryKey="@primaryKey" allowEditing="@(primaryKey ? false : true)" textAlign="Right" width="120"></e-grid-column>
                                        }
                                    </e-grid-columns>
                                    <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true" mode="Batch"></e-grid-editSettings>

                                    <e-grid-pagesettings pageCount="12"></e-grid-pagesettings>
                                    <e-grid-filterSettings type="Excel"></e-grid-filterSettings>
                                </ejs-grid>
                            </div>

                        }
                    }

                </div>
            </div>


        }
    }
    else
    {
        <p>No data available.</p>
    }

    <script>
        function actionComplete(args) {
            console.log(this.element.id);
            if (true) {
                // Extract data for batch processing
                var addedRecords = args.batchChanges.addedRecords;
                var updatedRecords = args.batchChanges.changedRecords;
                var deletedRecords = args.batchChanges.deletedRecords;
                console.log(JSON.stringify(updatedRecords))
                var gridname = this.element.id;
                // Send batched updates to server-side actions
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Update", "DatGrid")",
                    contentType: "application/json",
                    data: JSON.stringify({
                        jsonData: updatedRecords,
                        gridId: gridname
                    }),
                    success: function (response) {
                        var grid = document.getElementById(`${gridname}`);
                        console.log(response);
                        var gridElem = grid.ej2_instances[0];
                        console.log(gridElem);

                        var dataTable = JSON.parse(response);
                        gridElem.dataSource = dataTable;

                        gridElem.refresh();
                        ej.popups.hideSpinner(grid);
                        alert("Finish")
                    },
                    error: function (error) {
                        console.error('Error during batch create:', error);
                    }
                });


            }
        }
    </script>
</div>


@* <ejs-grid id="MasterDataGrid" dataSource="((System.Data.DataTable)ViewBag.datasource)"
          allowPaging="true"
          allowSorting="true"
          allowResizing="true"
          allowFiltering="true"
          allowGrouping="true"
          toolbar="(ViewBag.DG_button_Options)">
          <e-grid-columns>
        @foreach (var EachColumn in ViewBag.DG_DataColumn)
        {
            <e-grid-column field="@EachColumn.ToString()" headerText="@EachColumn.ToString()" isPrimaryKey="false" textAlign="Right" width="120"></e-grid-column>
        }
    </e-grid-columns>
    <e-grid-editSettings allowAdding="(ViewBag.allowAdding)" allowDeleting="(ViewBag.allowDeleting)" allowEditing="(ViewBag.allowEditing)" mode="Batch"></e-grid-editSettings>
   
    <e-grid-pagesettings pageCount="12"></e-grid-pagesettings>
    <e-grid-filterSettings type="Menu"></e-grid-filterSettings> @*
    <e-grid-selectionsettings type="Multiple"></e-grid-selectionsettings>
    <e-grid-groupsettings showDropArea="false" columns="@(new string[] { "CustomerID"})"></e-grid-groupsettings>
    <e-grid-columns>
        <e-grid-column field="OrderID" headerText="Order ID" isPrimaryKey="true" textAlign="Right" width="120"></e-grid-column>
        <e-grid-column field="CustomerID" headerText="Customer ID" width="140"></e-grid-column>
        <e-grid-column field="Freight" headerText="Freight" textAlign="Right" format="C2" width="120"></e-grid-column>
        <e-grid-column field="ShipCountry" headerText="Ship Country" width="140"></e-grid-column>
    </e-grid-columns>
    <e-grid-aggregates>
        <e-grid-aggregate>
            <e-aggregate-columns>
                <e-aggregate-column field="Freight" type="Sum" groupFooterTemplate="Total units: ${Sum}"></e-aggregate-column>
                <e-aggregate-column field="Verified" type="Truecount" groupFooterTemplate="Verified: ${Truecount}"></e-aggregate-column>
                <e-aggregate-column field="Freight" type="Max" groupCaptionTemplate="Maximum: ${Max}"></e-aggregate-column>
            </e-aggregate-columns>
        </e-grid-aggregate>
    </e-grid-aggregates> 
</ejs-grid>*@
 