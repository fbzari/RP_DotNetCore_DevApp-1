@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@page
@* @model RP_DotNetCore_DevApp.Models.DataGridModel *@





@using System.Data;

@model Dictionary<int, List<RP_DotNetCore_DevApp.Models.DataGridsModel>>
@{
    ViewBag.Title = "Data Grid";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var datagrids = ViewBag.DataGrids;
}

<div class="row mt-5" id="MenuBar">
    <div id='web-data' class='col-lg-6' style='padding-top:15px'>
        <label for="DataTableDropDown" class="form-label">Data Table</label>
        <div class='content' style="width: 15em;">
            <ejs-dropdownlist id="games">
                <e-data-manager url="/api/Dropdownlist/" adaptor="WebApiAdaptor"></e-data-manager>
            </ejs-dropdownlist>
        </div>
    </div>
</div> 
<div id="container" class="m-1">
    <h2>Data Grid Features:</h2>
    @if (datagrids != null)
    {
        foreach (var gridModel in datagrids)
        {


            <div class="container m-1">
                <div class="row">

                    @foreach (var grid in gridModel.Value)
                    {
                        if (grid.pivotTable)
                        {
                            var url = $"https://localhost:7051/api/Pivot/{grid.TableName}";
                            <div id="container" class="m-1">
                                <h5>@(grid.Title)</h5>
                                <ejs-pivotview id="@grid.id" height="500" showGroupingBar="true">
                        
                                    <e-datasourcesettings Url=@url enableSorting="true" allowLabelFilter="true" allowValueFilter="true">
                                        <e-rows>
                                            @foreach (var item in grid.rows)
                                            {
                                                <e-field name="@item["name"]"></e-field>
                                            }
                                        </e-rows>
                                        <e-columns>
                                            @foreach (var item in grid.columns)
                                            {
                                                <e-field name="@item["name"]" caption="@item["caption"]"></e-field>
                                            }
                                        </e-columns>
                                        <e-values>
                                            @foreach (var item in grid.values)
                                            {
                                                <e-field name="@item["name"]" caption="@item["caption"]"></e-field>
                                            }
                                        </e-values>
                                    </e-datasourcesettings>
                                </ejs-pivotview>

                            </div>

                        }
                        else
                        {
                            <div class="col-@(12 / (gridModel.Value.Count))">
                                <h5>@(grid.Title)</h5>
                                <ejs-grid id="@grid.id" dataSource="@grid.DataSource"
                                          allowPaging="true"
                                          allowSorting="true"
                                          allowResizing="true"
                                          allowFiltering="true"
                                          allowGrouping="true"
                                          toolbar="@grid.toolBarItems"
                                          beforeBatchSave="actionComplete">
                                    <e-grid-columns>
                                        @foreach (DataColumn column in grid.dataColumns)
                                        {
                                            bool primaryKey = grid.primaryKeyColumn.Contains(column.ColumnName);
                                            <e-grid-column field="@column.ColumnName" headerText="@column.ColumnName" all isPrimaryKey="@primaryKey" allowEditing="@(primaryKey ? false : true)" textAlign="Right" width="120"></e-grid-column>
                                        }
                                    </e-grid-columns>
                                    <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true" mode="Batch"></e-grid-editSettings>

                                    <e-grid-pagesettings pageCount="12"></e-grid-pagesettings>
                                    <e-grid-filterSettings type="Excel"></e-grid-filterSettings>
                                </ejs-grid>
                            </div>

                        }
                    }

                </div>
            </div>


        }
    }
    else
    {
        <p>No data available.</p>
    }

    <script>
        function actionComplete(args) {
            console.log(this.element.id);
            if (true) {
                // Extract data for batch processing
                var addedRecords = args.batchChanges.addedRecords;
                var updatedRecords = args.batchChanges.changedRecords;
                var deletedRecords = args.batchChanges.deletedRecords;
                console.log(JSON.stringify(updatedRecords))
                var gridname = this.element.id;
                // Send batched updates to server-side actions
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Update", "DatGrid")",
                    contentType: "application/json",
                    data: JSON.stringify({
                        jsonData: updatedRecords,
                        gridId: gridname
                    }),
                    success: function (response) {
                        var grid = document.getElementById(`${gridname}`);
                        console.log(response);
                        var gridElem = grid.ej2_instances[0];
                        console.log(gridElem);

                        var dataTable = JSON.parse(response);
                        gridElem.dataSource = dataTable;

                        gridElem.refresh();
                        ej.popups.hideSpinner(grid);
                        alert("Finish")
                    },
                    error: function (error) {
                        console.error('Error during batch create:', error);
                    }
                });


            }
        }
    </script>
</div>


@* <ejs-grid id="MasterDataGrid" dataSource="((System.Data.DataTable)ViewBag.datasource)"
          allowPaging="true"
          allowSorting="true"
          allowResizing="true"
          allowFiltering="true"
          allowGrouping="true"
          toolbar="(ViewBag.DG_button_Options)">
          <e-grid-columns>
        @foreach (var EachColumn in ViewBag.DG_DataColumn)
        {
            <e-grid-column field="@EachColumn.ToString()" headerText="@EachColumn.ToString()" isPrimaryKey="false" textAlign="Right" width="120"></e-grid-column>
        }
    </e-grid-columns>
    <e-grid-editSettings allowAdding="(ViewBag.allowAdding)" allowDeleting="(ViewBag.allowDeleting)" allowEditing="(ViewBag.allowEditing)" mode="Batch"></e-grid-editSettings>
   
    <e-grid-pagesettings pageCount="12"></e-grid-pagesettings>
    <e-grid-filterSettings type="Menu"></e-grid-filterSettings> @*
    <e-grid-selectionsettings type="Multiple"></e-grid-selectionsettings>
    <e-grid-groupsettings showDropArea="false" columns="@(new string[] { "CustomerID"})"></e-grid-groupsettings>
    <e-grid-columns>
        <e-grid-column field="OrderID" headerText="Order ID" isPrimaryKey="true" textAlign="Right" width="120"></e-grid-column>
        <e-grid-column field="CustomerID" headerText="Customer ID" width="140"></e-grid-column>
        <e-grid-column field="Freight" headerText="Freight" textAlign="Right" format="C2" width="120"></e-grid-column>
        <e-grid-column field="ShipCountry" headerText="Ship Country" width="140"></e-grid-column>
    </e-grid-columns>
    <e-grid-aggregates>
        <e-grid-aggregate>
            <e-aggregate-columns>
                <e-aggregate-column field="Freight" type="Sum" groupFooterTemplate="Total units: ${Sum}"></e-aggregate-column>
                <e-aggregate-column field="Verified" type="Truecount" groupFooterTemplate="Verified: ${Truecount}"></e-aggregate-column>
                <e-aggregate-column field="Freight" type="Max" groupCaptionTemplate="Maximum: ${Max}"></e-aggregate-column>
            </e-aggregate-columns>
        </e-grid-aggregate>
    </e-grid-aggregates> 
</ejs-grid>*@
 